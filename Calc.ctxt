#BlueJ class context
comment0.target=Calc
comment0.text=\r\n\ Calc\ -\ A\ class\ for\ calculations\ and\ randomizing\ numbers.\r\n\ \r\n\ @author\ Nathan\ Jiang\r\n\ @version\ October\ 2022\r\n
comment1.params=min\ max
comment1.target=int\ randomizeInt(int,\ int)
comment1.text=\r\n\ Method\ to\ randomize\ an\ int\ based\ on\ an\ inclusive\ range\r\n\ \r\n\ @param\ min\ \ \ Inclusive\ minimum\ of\ the\ int\r\n\ @param\ max\ \ \ Inclusive\ maximum\ of\ the\ int\r\n\ @return\ int\ \ The\ randomized\ int\r\n
comment10.params=test\ a\ b
comment10.target=boolean\ isBetween(double,\ double,\ double)
comment11.params=x1\ y1\ x2\ y2
comment11.target=double[]\ getMidpoint(double,\ double,\ double,\ double)
comment12.params=x\ y
comment12.target=double[]\ convertToPoint(double,\ double)
comment13.params=nums
comment13.target=double\ average(double[])
comment14.params=num
comment14.target=double\ convertToAngle(double)
comment15.params=ang1\ ang2
comment15.target=double\ getAngleDifference(double,\ double)
comment16.params=num\ inMin\ inMax\ outMin\ outMax
comment16.target=double\ map(double,\ double,\ double,\ double,\ double)
comment17.params=numNumbers\ sum
comment17.target=int[]\ getRandomNumsThatSumTo(int,\ int)
comment18.params=array
comment18.target=int[]\ randomizeArray(int[])
comment19.params=array
comment19.target=double\ maxOfArray(double[])
comment2.params=array\ min\ max
comment2.target=void\ randomizeDoubleArray(double[],\ double,\ double)
comment2.text=\r\n\ Method\ to\ randomize\ doubles\ in\ an\ array\ based\ on\ an\ inclusive\ range\r\n\ \r\n\ @param\ array\ The\ array\ to\ be\ randomized\r\n\ @param\ min\ \ \ Inclusive\ minimum\ of\ each\ double\r\n\ @param\ max\ \ \ Inclusive\ maximum\ of\ each\ double\r\n
comment3.params=min\ max
comment3.target=double\ randomizeDouble(double,\ double)
comment3.text=\r\n\ Method\ to\ randomize\ a\ double\ based\ on\ an\ inclusive\ range\r\n\ \r\n\ @param\ min\ \ \ Inclusive\ minimum\ of\ the\ double\r\n\ @param\ max\ \ \ Inclusive\ maximum\ of\ the\ double\r\n\ @return\ double\ \ The\ randomized\ double\r\n
comment4.params=num
comment4.target=int\ randomizeSign(int)
comment4.text=\r\n\ Method\ to\ randomize\ the\ sign\ of\ a\ number\r\n\ \r\n\ @param\ num\ \ \ The\ number\ to\ randomize\ the\ sign\ of\r\n\ @return\ int\ \ The\ number\ with\ a\ randomized\ sign\r\n
comment5.params=num
comment5.target=int\ getSign(double)
comment5.text=\r\n\ Method\ to\ get\ the\ sign\ of\ a\ number\r\n\ \r\n\ @param\ num\ \ \ The\ number\ to\ get\ the\ sign\ of\r\n\ @return\ int\ \ 1\ for\ positive\ and\ -1\ for\ negative\r\n
comment6.params=slope
comment6.target=double\ invTan(double)
comment6.text=\r\n\ Method\ to\ return\ the\ inverse\ tan\ of\ a\ slope\r\n\ \r\n\ @param\ slope\ \ \ \ \ The\ slope\r\n\ @return\ double\ \ \ The\ inverse\ tan\ of\ the\ slope\r\n
comment7.params=startX\ startY\ endX\ endY
comment7.target=double\ pointsToAngle(double,\ double,\ double,\ double)
comment7.text=\r\n\ Method\ to\ return\ the\ angle\ of\ a\ line\ segment\r\n\ \r\n\ @param\ startX\ \ \ \ X\ of\ point\ A\r\n\ @param\ startY\ \ \ \ Y\ of\ point\ A\r\n\ @param\ endX\ \ \ \ \ \ X\ of\ point\ B\r\n\ @param\ endY\ \ \ \ \ \ Y\ of\ point\ B\r\n\ @return\ double\ \ \ The\ angle\ of\ the\ line\ segment\r\n
comment8.params=x\ y
comment8.target=double\ pointsToAngle(double,\ double)
comment8.text=\r\n\ Method\ to\ return\ the\ angle\ of\ a\ line\ segment,\ starting\ from\ (0,\ 0)\r\n\ \r\n\ @param\ x\ \ \ \ X\ of\ endpoint\r\n\ @param\ y\ \ \ \ Y\ of\ endpoint\r\n\ @return\ double\ \ \ The\ angle\ of\ the\ line\ segment\r\n
comment9.params=x1\ y1\ x2\ y2
comment9.target=double\ getDistance(double,\ double,\ double,\ double)
numComments=20
